# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution(object):
    def mergeTwoLists(self, list1, list2):
        """
        :type list1: Optional[ListNode]
        :type list2: Optional[ListNode]
        :rtype: Optional[ListNode]
        """
        newHead = ListNode(0)
        newCurr = newHead
        curr1 = list1
        curr2 = list2

        while curr1 and curr2:
            if curr1.val <= curr2.val:
                newCurr.next = ListNode(curr1.val)
                curr1 = curr1.next
                newCurr = newCurr.next
            else:
                newCurr.next = ListNode(curr2.val)
                curr2 = curr2.next
                newCurr = newCurr.next

        # Attach the remaining
        if curr1:
            newCurr.next = curr1
        elif curr2:
            newCurr.next = curr2

        return newHead.next  # Skip the dummy node


        
